dist: xenial
sudo: required

language: php
php:
  - '7.3.0RC1'
  - '7.2'
  - '7.1'
  - '7.0'
  - '5.6'

matrix:
  fast_finish: true
  allow_failures:
    - php: '7.3.0RC1'

addons:
  apt:
    packages:
      - beanstalkd
      # See: https://github.com/travis-ci/travis-ci/issues/9717
      - libzip4
      # Uncomment for debug
      # - gdb

branches:
  only:
    - master
    - /^(3|4)\.\d+\.(\d+|x)$/

git:
  depth: 1

cache:
  apt: true
  ccache: true
  timeout: 604800
  directories:
    - .temp
    - $HOME/beanstalk
    - $HOME/.ccache
    - $HOME/.composer/cache
    - $HOME/pear
    - $HOME/.local/opt/re2c
    - $HOME/.cache/re2c

services:
  - beanstalkd
  - mongodb
  - redis-server
  - postgresql
  - mysql

env:
  global:
    - CC="ccache gcc"
    - PATH="$PATH:$HOME/bin"
    - ZEPHIR_PARSER_VERSION="v1.1.2"
    - RE2C_VERSION="1.1.1"
    - REPORT_EXIT_STATUS=1
    - NO_INTERACTION=1
    - TEST_PHP_ARGS="--show-diff"
    - DEFAULT_COMPOSER_FLAGS="--no-interaction --no-ansi --no-progress --no-suggest"
    - DEFAULT_MAKE_FLAGS="--silent"
    # Generating a valgrind log
    # For more see: https://bugs.php.net/bugs-getting-valgrind-log.php
    #
    # Uncomment to correctly show the stack frames for extensions compiled as shared libraries
    # - ZEND_DONT_UNLOAD_MODULES=1
    # Uncomment to disable Zend memory manager before running PHP with valgrind
    # - USE_ZEND_ALLOC=0

before_install:
  - if [[ ! -z "${GH_TOKEN}" ]]; then composer config github-oauth.github.com ${GH_TOKEN}; echo "Configured Github token"; fi;
  - export PHP_MAJOR="$(`phpenv which php` -r 'echo phpversion();' | cut -d '.' -f 1)"
  - export PHP_MINOR="$(`phpenv which php` -r 'echo phpversion();' | cut -d '.' -f 2)"
  - bash tests/_ci/pear_setup.sh
  - bash tests/_ci/setup_dbs.sh
  # Setting up test the environment
  - source $TRAVIS_BUILD_DIR/tests/_ci/environment
  - export $(cut -d= -f1 $TRAVIS_BUILD_DIR/tests/_ci/environment)
  # Remove all `--silent' for debug purposes
  - if [ "${PHP_MAJOR}.${PHP_MINOR}" = "7.3" ]; then export DEFAULT_MAKE_FLAGS="--debug"; fi

install:
  - composer install $DEFAULT_COMPOSER_FLAGS --dev --prefer-dist
  # We'll do this in future for the all 7.x series
  - |
      if [ "${PHP_MAJOR}.${PHP_MINOR}" = "7.3" ]; then
          composer remove -q -n --no-ansi --no-progress --dev doctrine/instantiator
          composer remove -q -n --no-ansi --no-progress --dev phpdocumentor/reflection-docblock
          composer remove -q -n --no-ansi --no-progress --dev phpunit/phpunit
          composer require $DEFAULT_COMPOSER_FLAGS --dev --prefer-source --ignore-platform-reqs  phpunit/phpunit:^6.4
      fi
  - bash tests/_ci/install_prereqs_$PHP_MAJOR.sh
  - bash tests/_ci/install-re2c $RE2C_VERSION
  - bash tests/_ci/install_zephir_parser.sh
  - bash tests/_ci/install_zephir.sh
  # We still need this until end of support of PHP 5.x
  - |
      if [ "${PHP_MAJOR}" = "7" ]; then
          zephir generate --backend=ZendEngine3
      else
          zephir generate --backend=ZendEngine2
      fi
  # Use `-g -O0' for debug purposes
  - export CFLAGS="-g3 -O1 -std=gnu90 -Wall"
  - cd ${TRAVIS_BUILD_DIR}/ext
  # Creating precompiled headers.
  # If a `*.gch' file is not found then the normal header files will be used.
  # For more see: http://en.wikipedia.org/wiki/Precompiled_header
  - |
      for file in `find kernel -name "*.h"`; do
          echo -e "Creating a precompiled header: ext/${file} => ext/${file}.ghc ...";
          $CC "$file" -I. $(php-config --includes) -o "$file.ghc";
      done
  - $(phpenv which phpize)
  - ./configure --with-php-config=$(phpenv which php-config) --enable-phalcon
  - make "${DEFAULT_MAKE_FLAGS}" -j"$(getconf _NPROCESSORS_ONLN)" # &> /dev/null
  - make "${DEFAULT_MAKE_FLAGS}" install
  - phpenv config-add $TRAVIS_BUILD_DIR/tests/_ci/phalcon.ini
  # We use this file as our custom PHP config
  - phpenv config-add $TRAVIS_BUILD_DIR/tests/_ci/ci.ini
  # Some debug info is located here
  - ls -al `$(phpenv which php-config) --extension-dir`
  - $(phpenv which php) -v
  - $(phpenv which php) -m
  - $(phpenv which php) --ri phalcon

before_script:
  - ulimit -c unlimited -S || true
  # Uncomment for debug purposes
  # - echo '/tmp/core_%e.%p' | sudo tee /proc/sys/kernel/core_pattern &> /dev/null
  # attempt to workaroung "ptrace: Operation not permitted"
  # - sudo chmod +s $(which gdb)

script:
  - cd $TRAVIS_BUILD_DIR
  # To avoud this:
  # sh: 1: /home/travis/build/phalcon/cphalcon/libtool: not found
  - ln -s $TRAVIS_BUILD_DIR/ext/libtool $TRAVIS_BUILD_DIR/libtool
  # Syntax recognize tests
  - |
      $(phpenv which php) $TRAVIS_BUILD_DIR/ext/run-tests.php \
          -p $(phpenv which php) \
          -g "FAIL,XFAIL,BORK,WARN,LEAK,SKIP" \
          --offline \
          --show-diff \
          --set-timeout 120
  # Run code style tests
  - vendor/bin/phpcs
  # Legacy unit tests
  # We'll drop or rewrite them for Phalcon 4.x
  - |
      if [ "${PHP_MAJOR}.${PHP_MINOR}" != "7.2" ] && [ "${PHP_MAJOR}.${PHP_MINOR}" != "7.3" ]; then
          vendor/bin/phpunit --bootstrap tests/_ci/phpunit.php --debug unit-tests/
      fi
  - vendor/bin/codecept build
  # TODO: Add `cli' suite and refactor current cli-tests
  - vendor/bin/codecept run -v -n tests/integration/
  - vendor/bin/codecept run -v -n tests/unit/

# Uncomment for debug purposes
# after_failure:
#  - bash tests/_ci/after_failure.sh

notifications:
    # Stop spam me. I already live on Travis CI and GitHub
    email: false


